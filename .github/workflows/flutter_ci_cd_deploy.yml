name: 🧪 Flutter CI/CD + Deploy to GitHub Pages

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  analyze:
    name: 🔍 Code Analysis
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'
          channel: 'stable'
          cache: true

      - name: 📦 Get dependencies
        run: flutter pub get

      - name: 🔧 Verify Flutter installation
        run: flutter doctor -v

      - name: ⚡ Analyze code
        run: flutter analyze --fatal-infos || echo "⚠️ Warning ignorati"

  test:
    name: 🧪 Run Tests
    runs-on: ubuntu-latest
    needs: analyze

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'
          channel: 'stable'
          cache: true

      - name: 📦 Get dependencies
        run: flutter pub get

      - name: 🧪 Run tests (skip if none)
        run: |
          if [ -d "test" ] && [ "$(ls -A test)" ]; then
            flutter test --coverage --reporter=expanded || echo "⚠️ Test falliti, ma continuo."
          else
            echo "⚠️ Nessun test trovato."
          fi

      - name: 📊 Upload coverage to Codecov (optional)
        if: success()
        uses: codecov/codecov-action@v3
        with:
          file: coverage/lcov.info
          fail_ci_if_error: false

  build:
    name: 🏗️ Build & Prepare for Deploy
    runs-on: ubuntu-latest
    needs: test
    env:
      API_KEY: ${{ secrets.API_KEY }}
      BASE_URL: ${{ secrets.BASE_URL }}

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐦 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.3'
          channel: 'stable'
          cache: true

      - name: 📦 Get dependencies
        run: flutter pub get

      - name: 🧩 Generate .env file
        run: |
          echo "API_KEY=${{ secrets.API_KEY }}" > .env
          echo "BASE_URL=${{ secrets.BASE_URL }}" >> .env

      - name: 🌐 Build Web
        run: flutter build web --release --base-href "/yourTurnNow/"

      - name: 📱 Build APK
        run: flutter build apk --debug

      - name: 📤 Upload artifact for deploy
        uses: actions/upload-pages-artifact@v3
        with:
          path: build/web

  deploy:
    name: 🚀 Deploy to GitHub Pages
    runs-on: ubuntu-latest
    needs: build
    if: success() && github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: 🚀 Deploy
        id: deployment
        uses: actions/deploy-pages@v4

  protection:
    name: 🛡️ Branch Protection
    runs-on: ubuntu-latest
    needs: [test, build]
    if: always()

    steps:
      - name: ❌ Fail if tests failed
        if: needs.test.result != 'success'
        run: |
          echo "❌ Tests failed! Cannot proceed with push/merge."
          exit 1

      - name: ❌ Fail if build failed
        if: needs.build.result != 'success'
        run: |
          echo "❌ Build failed! Cannot proceed with push/merge."
          exit 1

      - name: ✅ All checks passed
        if: needs.test.result == 'success' && needs.build.result == 'success'
        run: |
          echo "✅ All tests and builds passed successfully!"
          echo "🚀 Safe to merge/push to protected branches."
